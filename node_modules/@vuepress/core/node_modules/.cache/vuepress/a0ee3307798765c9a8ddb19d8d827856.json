{"remainingRequest":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\docs\\solution\\leetcode\\LeetCode-hot-topic-HOT-100\\readme.md?vue&type=template&id=4e5f4476&","dependencies":[{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\docs\\solution\\leetcode\\LeetCode-hot-topic-HOT-100\\readme.md","mtime":1648729898213},{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643457890275},{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1643457891278},{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643457890275},{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1643457891278},{"path":"F:\\code\\JetBrainsProjects\\WebstormProjects\\vuepress-blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1643457889929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAibGVldGNvZGUt54Ot6aKYLWhvdC0xMDAiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2xlZXRjb2RlLeeDremimC1ob3QtMTAwIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIExlZXRDb2RlIOeDremimCBIT1QgMTAwIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInRhYmxlIiwgWwogICAgICAgIF9jKCJ0aGVhZCIsIFtfYygidHIiLCBbX2MoInRoIiwgW192bS5fdigi6aKY6KejIildKV0pXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoInRib2R5IiwgWwogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvMS7kuKTmlbDkuYvlkowuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiMS7kuKTmlbDkuYvlkowiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvNjQu5pyA5bCP6Lev5b6E5ZKMLmh0bWwiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIjY0LuacgOWwj+i3r+W+hOWSjCIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0bzogIi9zb2x1dGlvbi9sZWV0Y29kZS9MZWV0Q29kZS1ob3QtdG9waWMtSE9ULTEwMC84NS7mnIDlpKfnn6nlvaIuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiODUu5pyA5aSn55+p5b2iIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgIlJvdXRlckxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiAiL3NvbHV0aW9uL2xlZXRjb2RlL0xlZXRDb2RlLWhvdC10b3BpYy1IT1QtMTAwLzEyMS7kubDljZbogqHnpajnmoTmnIDkvbPml7bmnLouaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiMTIxLuS5sOWNluiCoeelqOeahOacgOS9s+aXtuacuiIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0bzogIi9zb2x1dGlvbi9sZWV0Y29kZS9MZWV0Q29kZS1ob3QtdG9waWMtSE9ULTEwMC8xMzku5Y2V6K+N5ouG5YiGLmh0bWwiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIjEzOS7ljZXor43mi4bliIYiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvMTQ2LkxSVee8k+WtmC5odG1sIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIxNDYuTFJV57yT5a2YIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgIlJvdXRlckxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiAiL3NvbHV0aW9uL2xlZXRjb2RlL0xlZXRDb2RlLWhvdC10b3BpYy1IT1QtMTAwLzE0OC7mjpLluo/pk77ooaguaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiMTQ4LuaOkuW6j+mTvuihqCIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0bzogIi9zb2x1dGlvbi9sZWV0Y29kZS9MZWV0Q29kZS1ob3QtdG9waWMtSE9ULTEwMC8yMDYu5Y+N6L2s6ZO+6KGoLmh0bWwiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIjIwNi7lj43ovazpk77ooagiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvMjM2LuS6jOWPieagkeeahOacgOi/keWFrOWFseelluWFiC5odG1sIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIyMzYu5LqM5Y+J5qCR55qE5pyA6L+R5YWs5YWx56WW5YWIIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgIlJvdXRlckxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiAiL3NvbHV0aW9uL2xlZXRjb2RlL0xlZXRDb2RlLWhvdC10b3BpYy1IT1QtMTAwLzI5Ny7kuozlj4nmoJHnmoTluo/liJfljJbkuI7lj43luo/liJfljJYuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiMjk3LuS6jOWPieagkeeahOW6j+WIl+WMluS4juWPjeW6j+WIl+WMliIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0bzogIi9zb2x1dGlvbi9sZWV0Y29kZS9MZWV0Q29kZS1ob3QtdG9waWMtSE9ULTEwMC8zMDku5pyA5L2z5Lmw5Y2W6IKh56Wo5pe25py65ZCr5Ya35Ya75pyfLmh0bWwiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIjMwOS7mnIDkvbPkubDljZbogqHnpajml7bmnLrlkKvlhrflhrvmnJ8iKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvMzM3LuaJk+WutuWKq+iIjUlJSS5odG1sIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIzMzcu5omT5a625Yqr6IiNSUlJIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgIlJvdXRlckxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiAiL3NvbHV0aW9uL2xlZXRjb2RlL0xlZXRDb2RlLWhvdC10b3BpYy1IT1QtMTAwLzMzOC7mr5TnibnkvY3orqHmlbAuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiMzM4LuavlOeJueS9jeiuoeaVsCIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0bzogIi9zb2x1dGlvbi9sZWV0Y29kZS9MZWV0Q29kZS1ob3QtdG9waWMtSE9ULTEwMC80MTYu5YiG5Ymy562J5ZKM5a2Q6ZuGLmh0bWwiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIjQxNi7liIblibLnrYnlkozlrZDpm4YiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGQiLAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiUm91dGVyTGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86ICIvc29sdXRpb24vbGVldGNvZGUvTGVldENvZGUtaG90LXRvcGljLUhPVC0xMDAvNDk0Luebruagh+WSjC5odG1sIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCI0OTQu55uu5qCH5ZKMIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgIlJvdXRlckxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiAiL3NvbHV0aW9uL2xlZXRjb2RlL0xlZXRDb2RlLWhvdC10b3BpYy1IT1QtMTAwLzY0Ny7lm57mloflrZDkuLIuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiNjQ3LuWbnuaWh+WtkOS4siIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbX2MoInRkIildKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgW19jKCJ0ZCIpXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFtfYygidGQiKV0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbX2MoInRkIildKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgW19jKCJ0ZCIpXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJ0ciIsIFtfYygidGQiKV0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbX2MoInRkIildKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoInRyIiwgW19jKCJ0ZCIpXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}