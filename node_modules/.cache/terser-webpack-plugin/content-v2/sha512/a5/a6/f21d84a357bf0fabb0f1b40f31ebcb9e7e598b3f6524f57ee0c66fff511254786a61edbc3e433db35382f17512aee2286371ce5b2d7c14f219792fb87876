{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{576:function(t,s,a){\"use strict\";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"_206-反转链表\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_206-反转链表\"}},[t._v(\"#\")]),t._v(\" 206.反转链表\")]),t._v(\" \"),a(\"p\",[t._v(\"https://leetcode-cn.com/problems/reverse-linked-list/\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/River-Cold/pictureBed/vuepress-blog/docs/solution/leetcode/LeetCode-hot-topic-HOT-100/206.png\",alt:\"\",loading:\"lazy\"}})]),t._v(\" \"),a(\"h2\",{attrs:{id:\"方法一-递归\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法一-递归\"}},[t._v(\"#\")]),t._v(\" 方法一：递归\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"思路分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#思路分析\"}},[t._v(\"#\")]),t._v(\" 思路分析\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"Tips\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"递归函数\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"reverserList(ListNode* head)\")]),t._v(\"：返回反转后的链表头结点\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"节点反转示意图\")])]),t._v(\" \"),a(\"p\",[t._v(\"以节点1为例，结点1之后的结点，经过递归公式\"),a(\"code\",[t._v(\"reverserList\")]),t._v(\"处理后的结果如下图所示：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://pic.leetcode-cn.com/1611457360-ZminDz-image.png\",alt:\"image.png\",loading:\"lazy\"}})]),t._v(\" \"),a(\"p\",[t._v(\"接着需要做的就是反转结点1，也就是将head指向的结点作为下一个结点的下一个结点，即\"),a(\"code\",[t._v(\"head.next.next=head\")])]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://pic.leetcode-cn.com/1611457400-xIhTwQ-image.png\",alt:\"image.png\",loading:\"lazy\"}})]),t._v(\" \"),a(\"p\",[t._v(\"最后，将head指向的结点的下一个结点置为null，就完成了整个链表的反转。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://pic.leetcode-cn.com/1611457409-hQkmzj-image.png\",alt:\"image.png\",loading:\"lazy\"}})]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"递归过程示意图\")])]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://pic.leetcode-cn.com/8951bc3b8b7eb4da2a46063c1bb96932e7a69910c0a93d973bd8aa5517e59fc8.gif\",alt:\"img\",loading:\"lazy\"}})])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"参考代码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考代码\"}},[t._v(\"#\")]),t._v(\" 参考代码\")]),t._v(\" \"),a(\"CodeGroup\",[a(\"CodeGroupItem\",{attrs:{title:\"c++\"}},[a(\"div\",{staticClass:\"language-cpp line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-cpp\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Solution\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"reverseList\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"head \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" ret \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"reverseList\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" ret\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\")])])])],1),t._v(\" \"),a(\"h2\",{attrs:{id:\"方法二-迭代\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法二-迭代\"}},[t._v(\"#\")]),t._v(\" 方法二：迭代\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"Tips\")]),t._v(\" \"),a(\"p\",[t._v(\"定义两个指针：\"),a(\"code\",[t._v(\"pre\")]),t._v(\"和\"),a(\"code\",[t._v(\"cur\")]),t._v(\"，\"),a(\"code\",[t._v(\"pre\")]),t._v(\"初始时指向空\"),a(\"code\",[t._v(\"nullptr\")]),t._v(\"，\"),a(\"code\",[t._v(\"cur\")]),t._v(\"指向头结点\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"每次让\"),a(\"code\",[t._v(\"pre\")]),t._v(\"的下一个节点指针\"),a(\"code\",[t._v(\"next\")]),t._v(\"指向\"),a(\"code\",[t._v(\"cur\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"pre\")]),t._v(\"和\"),a(\"code\",[t._v(\"cur\")]),t._v(\"同时向后移动一个位置\")]),t._v(\" \"),a(\"li\",[t._v(\"直到\"),a(\"code\",[t._v(\"pre\")]),t._v(\"到达链表尾部结束，此时\"),a(\"code\",[t._v(\"cur\")]),t._v(\"指向空\"),a(\"code\",[t._v(\"nullptr\")])]),t._v(\" \"),a(\"li\",[t._v(\"返回\"),a(\"code\",[t._v(\"pre\")]),t._v(\"即为反转链表的头结点\")])])]),t._v(\" \"),a(\"CodeGroupItem\",{attrs:{title:\"c++\"}},[a(\"div\",{staticClass:\"language-cpp line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-cpp\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Solution\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"reverseList\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"head \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"nullptr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"nullptr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" pre \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"nullptr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"cur \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"cur\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            ListNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" cur\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            cur\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" pre\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            pre \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" cur\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            cur \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" pre\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),a(\"br\")])])]),t._v(\" \"),a(\"p\",[t._v(\"::::\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"参考文献\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文献\"}},[t._v(\"#\")]),t._v(\" 参考文献\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/reverse-linked-list/solution/yi-bu-yi-bu-jiao-ni-ru-he-yong-di-gui-si-67c3/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"一步一步教你如何用递归思想反转链表 - 反转链表 - 力扣（LeetCode） (leetcode-cn.com)\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/reverse-linked-list/solution/fan-zhuan-lian-biao-shuang-zhi-zhen-di-gui-yao-mo-/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"【反转链表】：双指针，递归，妖魔化的双指针 - 反转链表 - 力扣（LeetCode） (leetcode-cn.com)\"),a(\"OutboundLink\")],1)])],1)}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}