(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{540:function(a,t,s){"use strict";s.r(t);var i=s(1),v=Object(i.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"数据库知识手册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库知识手册"}},[a._v("#")]),a._v(" 数据库知识手册")]),a._v(" "),s("h2",{attrs:{id:"数据库基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库基础概念"}},[a._v("#")]),a._v(" 数据库基础概念")]),a._v(" "),s("h3",{attrs:{id:"什么是数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据库"}},[a._v("#")]),a._v(" 什么是数据库？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("数据库（Database）是保存有组织的数据的容器（通常是一个文件或一组文件），是通过数据库管理系统（DataBase-Management System，DBMS）创建和操纵的容器。")])]),a._v(" "),s("h3",{attrs:{id:"什么是数据库管理系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据库管理系统"}},[a._v("#")]),a._v(" 什么是数据库管理系统？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("一种操纵和管理数据库的大型软件，简称DBMS")])]),a._v(" "),s("h3",{attrs:{id:"为什么要使用数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用数据库"}},[a._v("#")]),a._v(" 为什么要使用数据库？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("ol",[s("li",[a._v("数据可永久保存且数据安全性高")]),a._v(" "),s("li",[a._v("使用SQL语句，查询方便效率高")]),a._v(" "),s("li",[a._v("便于数据管理和数据分析")])])]),a._v(" "),s("h3",{attrs:{id:"sql和mysql有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql和mysql有什么区别"}},[a._v("#")]),a._v(" SQL和MySQL有什么区别？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("SQL是一种结构化查询语言，用于在数据库上执行各种操作。")]),a._v(" "),s("p",[a._v("MySQL是一个关系型数据库管理系统（RDBMS），使用SQL执行所有数据库操作。")])]),a._v(" "),s("h3",{attrs:{id:"数据库三大范式是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库三大范式是什么"}},[a._v("#")]),a._v(" 数据库三大范式是什么？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("数据库范式是设计数据库时，需要遵循的一些规范。越高的范式数据库冗余越小。常用的数据库三大范式为：")]),a._v(" "),s("ul",[s("li",[a._v("**第一范式（1NF）：**每个列都不可以再拆分，强调列的原子性。第一范式要求数据库中的表都是二维表。")]),a._v(" "),s("li",[s("strong",[a._v("第二范式（2NF）："),s("strong",[a._v("在第一范式的基础上，一个表必须有一个主键，非主键列")]),a._v("完全依赖")]),a._v("于主键，而不能是依赖于主键的一部分。")]),a._v(" "),s("li",[a._v("**第三范式（3NF）：**在第二范式的基础上，非主键列只依赖于（直接依赖）于主键，不依赖于其他非主键。")])])]),a._v(" "),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),s("h3",{attrs:{id:"索引的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的优缺点"}},[a._v("#")]),a._v(" 索引的优缺点")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[s("strong",[a._v("索引的优点")])]),a._v(" "),s("ul",[s("li",[a._v("通过创建"),s("strong",[a._v("唯一性索引")]),a._v("，可以"),s("strong",[a._v("保证每一行数据的唯一性")]),a._v("；")]),a._v(" "),s("li",[a._v("加快数据的"),s("strong",[a._v("检索速度")])]),a._v(" "),s("li",[a._v("加速"),s("strong",[a._v("表与表之间的连接")])])]),a._v(" "),s("p",[s("strong",[a._v("索引的缺点")])]),a._v(" "),s("ul",[s("li",[a._v("时间上，创建和维护索引都需要耗费时间，这种时间随数据量增加而增加")]),a._v(" "),s("li",[a._v("空间上，索引需要占"),s("strong",[a._v("物理空间")]),a._v("，除了数据表占数据空间外，每个索引还要占一定的物理空间，如果要建立聚簇索引，需要的空间就更大。")])])]),a._v(" "),s("h3",{attrs:{id:"索引的数据结构有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的数据结构有哪些"}},[a._v("#")]),a._v(" 索引的数据结构有哪些？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("数据库索引按照结构分类，主要有"),s("strong",[a._v("B树索引、Hash索引和位图索引")]),a._v("三种")]),a._v(" "),s("p",[s("strong",[a._v("B树索引")])]),a._v(" "),s("p",[a._v("又称"),s("strong",[a._v("平衡树索引")]),a._v("。以树结构组织，有一个或多个分支结点，分支结点又指向单级叶结点。其中分支结点用于遍历树，叶结点则保存真正的值和位置信息。")]),a._v(" "),s("p",[s("strong",[a._v("Hash索引")])]),a._v(" "),s("p",[a._v("哈希索引采取一定的哈希算法（常见哈希算法有直接定址法，平方取中法，折叠法，除数取余法，随机数法），将数据库字段转换成定长的Hash值，与这条数据的行指针一并存入Hash表的对应位置，如果发生Hash冲突（两个不同关键字的Hash值相同），则在对应Hash键下以链表形式存储。")]),a._v(" "),s("p",[s("strong",[a._v("位图索引")])]),a._v(" "),s("p",[a._v("位图索引为存储在某列中的每一个值生成一个位图。位图索引适合只有几个固定值的列，需要注意位图索引适合静态数据，不适合索引频繁更新的列。")])]),a._v(" "),s("h3",{attrs:{id:"b树的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b树的特点"}},[a._v("#")]),a._v(" B树的特点")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/River-Cold/pictureBed/vuepress-blog/interview/basics/network/20220227215631.png",alt:"",loading:"lazy"}})]),a._v(" "),s("p",[a._v("B树是所有结点的平衡因子均等于0的多路平衡查找树")]),a._v(" "),s("ul",[s("li",[a._v("每个节点最多m个子结点（m棵子树），即"),s("strong",[a._v("至多含有"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("m")]),s("mo",[a._v("−")]),s("mn",[a._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("m-1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{staticClass:"mord mathnormal"},[a._v("m")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),s("span",{staticClass:"mbin"},[a._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),s("span",{staticClass:"mord"},[a._v("1")])])])]),a._v("个关键字")])]),a._v(" "),s("li",[a._v("如果根节点没有关键字就没有子树，此时B树为空；如果根节点有关键字，则其子树必然大于等于两棵")]),a._v(" "),s("li",[a._v("除了根节点和叶子结点外，每个结点至少有"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[a._v("⌈")]),s("mrow",[s("mi",[a._v("m")]),s("mi",{attrs:{mathvariant:"normal"}},[a._v("/")]),s("mn",[a._v("2")]),s("mo",{attrs:{stretchy:"false"}},[a._v("⌉")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("\\lceil{m/2\\rceil}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[a._v("⌈")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[a._v("m")]),s("span",{staticClass:"mord"},[a._v("/2")]),s("span",{staticClass:"mclose"},[a._v("⌉")])])])])]),a._v("（向上取整）个子结点")]),a._v(" "),s("li",[a._v("所有叶子结点位于同一层，按照关键字大小顺序排列")]),a._v(" "),s("li",[a._v("每个节点既存放关键字信息也存放具体数据")])])]),a._v(" "),s("h3",{attrs:{id:"b-树的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树的特点"}},[a._v("#")]),a._v(" B+树的特点")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("B+ 树是在 B 树基础上的一种优化，使其更适合实现存储索引结构。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/River-Cold/pictureBed/vuepress-blog/interview/basics/network/20220227215703.png",alt:"",loading:"lazy"}})]),a._v(" "),s("ul",[s("li",[a._v("每个节点最多m个子结点（m棵子树），即"),s("strong",[a._v("至多含有"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.4306em"}}),s("span",{staticClass:"mord mathnormal"},[a._v("m")])])])]),a._v("个关键字")])]),a._v(" "),s("li",[a._v("如果根节点没有关键字就没有子树，此时B树为空；如果根节点有关键字，则其子树必然大于等于两棵")]),a._v(" "),s("li",[a._v("除了根节点和叶子结点外，每个结点至少有"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[a._v("⌈")]),s("mrow",[s("mi",[a._v("m")]),s("mi",{attrs:{mathvariant:"normal"}},[a._v("/")]),s("mn",[a._v("2")]),s("mo",{attrs:{stretchy:"false"}},[a._v("⌉")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("\\lceil{m/2\\rceil}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[a._v("⌈")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[a._v("m")]),s("span",{staticClass:"mord"},[a._v("/2")]),s("span",{staticClass:"mclose"},[a._v("⌉")])])])])]),a._v("（向上取整）个子结点")]),a._v(" "),s("li",[a._v("所有叶子结点位于同一层，按照关键字大小顺序排列，"),s("strong",[a._v("并且相邻叶结点之间有一个链指针")])]),a._v(" "),s("li",[a._v("非叶结点只起到索引作用，只存放关键字，不存放数据，只有叶子结点既存放关键字也存放数据")])])]),a._v(" "),s("h3",{attrs:{id:"b-树和b-树的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树和b-树的区别"}},[a._v("#")]),a._v(" B+树和B-树的区别？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("ul",[s("li",[a._v("B树每个节点的子节点个数=关键字个数+1，B+树每个节点的子节点个数=关键字个数")]),a._v(" "),s("li",[a._v("B树的相邻叶结点都是独立的，B+树的相邻叶结点之间有链指针")]),a._v(" "),s("li",[a._v("B树的每个节点既存放关键字也存放数据，B+树的非叶结点只起到索引作用，只存放关键字，不存放数据，只有叶子结点既存放关键字也存放数据")])])]),a._v(" "),s("h3",{attrs:{id:"使用b-树的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用b-树的好处"}},[a._v("#")]),a._v(" 使用B+树的好处?")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[s("strong",[a._v("更少的IO次数")]),a._v("：B+树的内部结点只存放键，不存放值，因此，一次读取，可以在同一内存页中获取更多的键，有利于更快的缩小查找范围。")]),a._v(" "),s("p",[s("strong",[a._v("更适用于范围查询："),s("strong",[a._v("B+树的叶结点由一条链相连，因此当需要进行一次")]),a._v("全数据遍历")]),a._v("的时候，B+树只需要使用"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("O")]),s("mo",{attrs:{stretchy:"false"}},[a._v("(")]),s("mi",[a._v("l")]),s("mi",[a._v("o")]),s("mi",[a._v("g")]),s("mi",[a._v("N")]),s("mo",{attrs:{stretchy:"false"}},[a._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("O(logN)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[a._v("O")]),s("span",{staticClass:"mopen"},[a._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[a._v("l")]),s("span",{staticClass:"mord mathnormal"},[a._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[a._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[a._v("N")]),s("span",{staticClass:"mclose"},[a._v(")")])])])]),a._v("时间找到最小结点，然后通过链进行"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("O")]),s("mo",{attrs:{stretchy:"false"}},[a._v("(")]),s("mi",[a._v("N")]),s("mo",{attrs:{stretchy:"false"}},[a._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("O(N)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[a._v("O")]),s("span",{staticClass:"mopen"},[a._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[a._v("N")]),s("span",{staticClass:"mclose"},[a._v(")")])])])]),a._v("的顺序遍历即可。或者在找"),s("strong",[a._v("大于某个关键字或者小于某个关键字的数据")]),a._v("的时候，B+树只需要找到该关键字然后沿着链表遍历即可。")])]),a._v(" "),s("h3",{attrs:{id:"hash索引和b-树索引的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash索引和b-树索引的区别"}},[a._v("#")]),a._v(" Hash索引和B+树索引的区别？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("ul",[s("li",[a._v("**范围查询：**Hash索引不支持范围查询，B+树支持范围查询")]),a._v(" "),s("li",[a._v("**排序：**Hash索引不支持排序，B+树索引支持排序，因为Hash索引指向的数据是无序的，而B+树索引指向的数据是有序的")]),a._v(" "),s("li",[a._v("**模糊查询和最左前缀匹配：**Hash索引不支持模糊查询以及多列索引的最左前缀匹配，原因是Hash函数的不可预测，AAAA和AAAAB的索引没有相关性，B+树索引支持模糊查询以及多列索引的最左前缀匹配")]),a._v(" "),s("li",[a._v("**查询效率：**Hash索引虽然在等值查询上较快，但是不稳定，当某个键值存在大量重复的时候，发生Hash碰撞，此时效率可能极差；B+树的查询效率比较稳定，对于所有的查询都是从根节点到叶子结点，且树的高度较低")])])]),a._v(" "),s("h3",{attrs:{id:"什么是前缀索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是前缀索引"}},[a._v("#")]),a._v(" 什么是前缀索引？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("有时需要索引很长的字符列，它会使索引变大且变慢，一个策略就是使用索引开始的几个字符，而不是全部值，即被称为"),s("strong",[a._v("前缀索引")]),a._v("，以节约空间并获得好的性能。")])]),a._v(" "),s("h3",{attrs:{id:"什么是联合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是联合索引"}},[a._v("#")]),a._v(" 什么是联合索引？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("联合索引就是由两个或以上的字段共同构成的索引。")])]),a._v(" "),s("h3",{attrs:{id:"什么是最左前缀匹配原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是最左前缀匹配原则"}},[a._v("#")]),a._v(" 什么是最左前缀匹配原则？")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("p",[a._v("在MySQL建立联合索引（多列索引）时会遵循最左前缀匹配原则，即"),s("strong",[a._v("最左优先")]),a._v("，在检索数据时从联合索引的最左边一列开始匹配（也就是where子句中一定要有联合索引的第一个字段，并且where子句中字段的顺序可以任意调整）。")]),a._v(" "),s("p",[a._v("例如有一个3列索引（a,b,c），则已经对(a)、(a,b)、(a,b,c)上建立了索引。所以在创建"),s("strong",[a._v("多列索引")]),a._v("时，要根据业务需求，"),s("code",[a._v("where")]),a._v("子句中使用最频繁的一列放在最左边。")]),a._v(" "),s("p",[a._v("**根据最左前缀匹配原则，MySQL 会一直向右匹配直到遇到 范围查询（>、<、between、like）就停止匹配，**比如采用查询条件 where a = 1 and b = 2 and c > 3 and d = 4 时，如果建立（a,b,c,d）顺序的索引，d 是用不到索引的，如果建立（a,b,d,c）的索引则都可以用到，并且 where 子句中 a、b、d 的顺序可以任意调整。")])]),a._v(" "),s("h3",{attrs:{id:"添加索引的原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加索引的原则"}},[a._v("#")]),a._v(" 添加索引的原则")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("answer")]),a._v(" "),s("ul",[s("li",[a._v("**在查询中很少使用或者参考的列不要创建索引：**由于这些列很少使用到，增加索引反而会降低系统的维护速度和增大空间需求。")]),a._v(" "),s("li",[a._v("**只有很少数据值的列不创建索引：**区分度太低，增加索引并不能明显加快检索速度")]),a._v(" "),s("li",[s("strong",[a._v("修改性能远远大于检索性能时，不应该创建索引")]),a._v("：二者相互矛盾，当增加索引时，会提高索引性能，但是会降低修改性能。")]),a._v(" "),s("li",[s("strong",[a._v("定义为外键的数据列一定要创建索引")]),a._v("：如果不加索引，则删除主表记录或主子表关联查询，都会进行字表的全表扫描。")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);